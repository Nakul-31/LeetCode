class Solution(object):
    def minimumTeachings(self, n, languages, friendships):
        """
        :type n: int
        :type languages: List[List[int]]
        :type friendships: List[List[int]]
        :rtype: int
        """
        # Convert each user's languages to a set for quick lookup
        langs = [set(l) for l in languages]

        # Find users who cannot communicate with their friend
        need_teach = set()
        for u, v in friendships:
            u -= 1
            v -= 1
            if langs[u].intersection(langs[v]):  # they share a language
                continue
            need_teach.add(u)
            need_teach.add(v)

        if not need_teach:
            return 0

        # Count how many of these users already know each language
        freq = [0] * (n + 1)
        for user in need_teach:
            for lang in langs[user]:
                freq[lang] += 1

        # Minimum users to teach = total candidates - max already knowing one language
        return len(need_teach) - max(freq)

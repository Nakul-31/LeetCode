from heapq import heappush, heappop
from typing import List

class Solution:
    def swimInWater(self, grid: List[List[int]]) -> int:
        n = len(grid)
        visited = [[False] * n for _ in range(n)]
        heap = [(grid[0][0], 0, 0)]  # (time/elevation, x, y)
        directions = [(1,0), (-1,0), (0,1), (0,-1)]
        
        while heap:
            t, x, y = heappop(heap)
            # If reached bottom-right cell
            if x == n-1 and y == n-1:
                return t
            
            if visited[x][y]:
                continue
            visited[x][y] = True
            
            for dx, dy in directions:
                nx, ny = x + dx, y + dy
                if 0 <= nx < n and 0 <= ny < n and not visited[nx][ny]:
                    # Water level must reach at least grid[nx][ny]
                    heappush(heap, (max(t, grid[nx][ny]), nx, ny))

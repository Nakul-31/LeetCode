from collections import Counter
from typing import List

class Solution:
    def maximumTotalDamage(self, power: List[int]) -> int:
        freq = Counter(power)
        nums = sorted(freq.keys())
        n = len(nums)
        dp = [0] * n
        
        for i in range(n):
            cur_damage = nums[i] * freq[nums[i]]
            dp[i] = cur_damage
            
            # Find previous non-conflicting index
            j = i - 1
            while j >= 0 and nums[i] - nums[j] <= 2:
                j -= 1
            
            if j >= 0:
                dp[i] += dp[j]
            
            if i > 0:
                dp[i] = max(dp[i], dp[i-1])
        
        return dp[-1]

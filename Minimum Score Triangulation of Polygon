from functools import lru_cache
from typing import List

class Solution:
    def minScoreTriangulation(self, values: List[int]) -> int:
        n = len(values)

        @lru_cache(None)
        def dp(i, j):
            # base case: if less than 3 vertices, no triangle
            if j - i < 2:
                return 0

            ans = float('inf')
            # try every k as the middle vertex
            for k in range(i + 1, j):
                score = values[i] * values[j] * values[k] + dp(i, k) + dp(k, j)
                ans = min(ans, score)
            return ans

        return dp(0, n - 1)
